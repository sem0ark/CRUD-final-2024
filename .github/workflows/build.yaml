name: CI - Deploy

on:
  push:
    tags:
      - v[0-9]+

env:
  AWS_REGION: eu-north-1
  AWS_TASK_FAMILY: crud-app-web
  AWS_CLUSTER: eu-north-1-web-cluster

jobs:
  push-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-verion: "3.10"
          cache: "pip"

      - name: Build lambda function
        run: |
          mkdir lambda/update_image/package && \
          pip install \
            --platform manylinux2014_x86_64 \
            --target=lambda/update_image/package \
            --implementation cp \
            --python-version 3.10 \
            --only-binary=:all: --upgrade pillow boto3 && \
          cd lambda/update_image/package && zip -9 -r ../../../update_image.zip . && cd .. && zip ../../update_image.zip lambda_function.py && cd ../..

      - name: Build lambda function
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          function_name: update_image
          zip_file: update_image.zip
          runtime: python3.10

  # https://github.com/marketplace/actions/amazon-ecs-deploy-task-definition-action-for-github-actions
  push-ecs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.AWS_TASK_FAMILY }} --query taskDefinition > task-definition.json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: task-definition.json
          service: ${{ env.AWS_TASK_FAMILY }}
          cluster: ${{ env.AWS_CLUSTER }}
          wait-for-service-stability: true
